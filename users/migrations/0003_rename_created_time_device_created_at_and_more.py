# Generated by Django 5.0.4 on 2024-05-03 10:50

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0002_user_is_staff'),
    ]

    operations = [
        migrations.RenameField(
            model_name='device',
            old_name='created_time',
            new_name='created_at',
        ),
        migrations.RenameField(
            model_name='province',
            old_name='created_time',
            new_name='created_at',
        ),
        migrations.AlterField(
            model_name='device',
            name='app_version',
            field=models.CharField(blank=True, max_length=20, verbose_name='app version'),
        ),
        migrations.AlterField(
            model_name='device',
            name='device_model',
            field=models.CharField(blank=True, max_length=50, verbose_name='device model'),
        ),
        migrations.AlterField(
            model_name='device',
            name='device_os',
            field=models.CharField(blank=True, max_length=20, verbose_name='device os'),
        ),
        migrations.AlterField(
            model_name='device',
            name='device_type',
            field=models.PositiveSmallIntegerField(choices=[(1, 'web'), (2, 'ios'), (3, 'android')], default=1),
        ),
        migrations.AlterField(
            model_name='device',
            name='device_uuid',
            field=models.UUIDField(null=True, verbose_name='Device UUID'),
        ),
        migrations.AlterField(
            model_name='device',
            name='last_login',
            field=models.DateTimeField(null=True, verbose_name='last login date'),
        ),
        migrations.AlterField(
            model_name='user',
            name='date_joined',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined'),
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='email address'),
        ),
        migrations.AlterField(
            model_name='user',
            name='first_name',
            field=models.CharField(blank=True, max_length=30, verbose_name='first name'),
        ),
        migrations.AlterField(
            model_name='user',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active'),
        ),
        migrations.AlterField(
            model_name='user',
            name='is_staff',
            field=models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status'),
        ),
        migrations.AlterField(
            model_name='user',
            name='last_name',
            field=models.CharField(blank=True, max_length=30, verbose_name='last name'),
        ),
        migrations.AlterField(
            model_name='user',
            name='last_seen',
            field=models.DateTimeField(null=True, verbose_name='last seen date'),
        ),
        migrations.AlterField(
            model_name='user',
            name='phone_number',
            field=models.BigIntegerField(blank=True, error_messages={'unique': 'A user with this mobile number already exists.'}, null=True, unique=True, validators=[django.core.validators.RegexValidator('^989[0-3,9]\\d{8}$', 'Enter a valid mobile number.', 'invalid')], verbose_name='mobile number'),
        ),
        migrations.AlterField(
            model_name='user',
            name='username',
            field=models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 30 characters or fewer starting with a letter. Letters, digits and underscore only.', max_length=32, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z][a-zA-Z0-9_\\.]+$', 'Enter a valid username starting with a-z. This value may contain only letters, numbers and underscore characters.', 'invalid')], verbose_name='username'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='avatar',
            field=models.ImageField(blank=True, upload_to='', verbose_name='avatar'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='birthday',
            field=models.DateField(blank=True, null=True, verbose_name='birthday'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='gender',
            field=models.BooleanField(blank=True, help_text='female is False, male is True, null is unset', null=True, verbose_name='gender'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='nick_name',
            field=models.CharField(blank=True, max_length=150, verbose_name='nick_name'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='province',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.province', verbose_name='province'),
        ),
    ]
